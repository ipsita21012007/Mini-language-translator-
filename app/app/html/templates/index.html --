
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mini Language Translator</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }
        
        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
        }
        
        .header p {
            font-size: 1.1em;
            opacity: 0.9;
        }
        
        .content {
            padding: 30px;
        }
        
        .language-selectors {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            gap: 20px;
        }
        
        .language-selector {
            flex: 1;
        }
        
        .language-selector label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #333;
        }
        
        .language-selector select {
            width: 100%;
            padding: 12px;
            border: 2px solid #e1e5e9;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        
        .language-selector select:focus {
            outline: none;
            border-color: #667eea;
        }
        
        .swap-button {
            background: #667eea;
            color: white;
            border: none;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            font-size: 20px;
            cursor: pointer;
            transition: transform 0.3s, background 0.3s;
        }
        
        .swap-button:hover {
            background: #764ba2;
            transform: rotate(180deg);
        }
        
        .text-areas {
            display: flex;
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .text-area {
            flex: 1;
        }
        
        .text-area label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #333;
        }
        
        .text-area textarea {
            width: 100%;
            height: 150px;
            padding: 15px;
            border: 2px solid #e1e5e9;
            border-radius: 8px;
            font-size: 16px;
            font-family: inherit;
            resize: vertical;
            transition: border-color 0.3s;
        }
        
        .text-area textarea:focus {
            outline: none;
            border-color: #667eea;
        }
        
        .translate-button {
            width: 100%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 15px;
            border-radius: 8px;
            font-size: 18px;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.2s;
        }
        
        .translate-button:hover {
            transform: translateY(-2px);
        }
        
        .translate-button:active {
            transform: translateY(0);
        }
        
        .result {
            margin-top: 20px;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 8px;
            border-left: 4px solid #667eea;
        }
        
        .loading {
            display: none;
            text-align: center;
            padding: 20px;
        }
        
        .spinner {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #667eea;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 0 auto;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .error {
            color: #e74c3c;
            background: #ffeaea;
            padding: 15px;
            border-radius: 8px;
            margin-top: 20px;
            border-left: 4px solid #e74c3c;
        }
        
        @media (max-width: 768px) {
            .language-selectors {
                flex-direction: column;
            }
            
            .text-areas {
                flex-direction: column;
            }
            
            .swap-button {
                order: 3;
                margin-top: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üåç Mini Language Translator</h1>
            <p>Translate between English and Indian Regional Languages</p>
        </div>
        
        <div class="content">
            <div class="language-selectors">
                <div class="language-selector">
                    <label for="source-lang">From:</label>
                    <select id="source-lang">
                        <option value="en">English</option>
                        <option value="hi">Hindi</option>
                        <option value="ta">Tamil</option>
                        <option value="te">Telugu</option>
                        <option value="mr">Marathi</option>
                    </select>
                </div>
                
                <button class="swap-button" onclick="swapLanguages()">‚áÑ</button>
                
                <div class="language-selector">
                    <label for="target-lang">To:</label>
                    <select id="target-lang">
                        <option value="hi">Hindi</option>
                        <option value="en">English</option>
                        <option value="ta">Tamil</option>
                        <option value="te">Telugu</option>
                        <option value="mr">Marathi</option>
                    </select>
                </div>
            </div>
            
            <div class="text-areas">
                <div class="text-area">
                    <label for="source-text">Enter text to translate:</label>
                    <textarea id="source-text" placeholder="Type your text here..."></textarea>
                </div>
                
                <div class="text-area">
                    <label for="translated-text">Translated text:</label>
                    <textarea id="translated-text" placeholder="Translation will appear here..." readonly></textarea>
                </div>
            </div>
            
            <button class="translate-button" onclick="translateText()">Translate</button>
            
            <div class="loading" id="loading">
                <div class="spinner"></div>
                <p>Translating...</p>
            </div>
            
            <div id="result"></div>
            <div id="error"></div>
        </div>
    </div>

    <script>
        function swapLanguages() {
            const sourceLang = document.getElementById('source-lang');
            const targetLang = document.getElementById('target-lang');
            
            const temp = sourceLang.value;
            sourceLang.value = targetLang.value;
            targetLang.value = temp;
            
            // Also swap text areas
            const sourceText = document.getElementById('source-text');
            const translatedText = document.getElementById('translated-text');
            
            const tempText = sourceText.value;
            sourceText.value = translatedText.value;
            translatedText.value = tempText;
        }
        
        async function translateText() {
            const sourceText = document.getElementById('source-text').value.trim();
            const sourceLang = document.getElementById('source-lang').value;
            const targetLang = document.getElementById('target-lang').value;
            const translatedText = document.getElementById('translated-text');
            const loading = document.getElementById('loading');
            const resultDiv = document.getElementById('result');
            const errorDiv = document.getElementById('error');
            
            // Clear previous results
            resultDiv.innerHTML = '';
            errorDiv.innerHTML = '';
            translatedText.value = '';
            
            if (!sourceText) {
                showError('Please enter some text to translate.');
                return;
            }
            
            if (sourceLang === targetLang) {
                showError('Source and target languages cannot be the same.');
                return;
            }
            
            // Show loading
            loading.style.display = 'block';
            
            try {
                const response = await fetch('/translate', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        text: sourceText,
                        source_lang: sourceLang,
                        target_lang: targetLang
                    })
                });
                
                const data = await response.json();
                
                if (response.ok) {
                    translatedText.value = data.translated_text;
                    showResult(`Translation completed successfully!`);
                } else {
                    showError(data.error || 'Translation failed. Please try again.');
                }
            } catch (error) {
                showError('Network error. Please check your connection and try again.');
            } finally {
                loading.style.display = 'none';
            }
        }
        
        function showResult(message) {
            const resultDiv = document.getElementById('result');
            resultDiv.innerHTML = `
                <div class="result">
                    <strong>Success!</strong> ${message}
                </div>
            `;
        }
        
        function showError(message) {
            const errorDiv = document.getElementById('error');
            errorDiv.innerHTML = `
                <div class="error">
                    <strong>Error:</strong> ${message}
                </div>
            `;
        }
        
        // Allow pressing Enter to translate (with Ctrl+Enter)
        document.getElementById('source-text').addEventListener('keydown', function(e) {
            if (e.ctrlKey && e.key === 'Enter') {
                translateText();
            }
        });
    </script>
</body>
</html>